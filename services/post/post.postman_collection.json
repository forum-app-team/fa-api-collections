{
  "info": {
    "name": "fa-post",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3002",
      "type": "string"
    },
    {
      "key": "jwt",
      "value": "",
      "type": "string"
    },
    {
      "key": "post_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Protected",
      "item": [
        {
          "name": "Create Post (draft)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Created 201', () => pm.response.to.have.status(201));",
                  "const json = pm.response.json();",
                  "pm.test('status=Unpublished', () => pm.expect(json.status).to.eql('Unpublished'));",
                  "pm.collectionVariables.set('post_id', json.id || '');",
                  "pm.test('id captured', () => pm.collectionVariables.get('post_id') !== '');"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Hello from Postman\",\n  \"content\": \"Body content\",\n  \"images\": [],\n  \"attachments\": []\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/posts",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "posts"
              ]
            }
          }
        },
        {
          "name": "Update Post (title/content)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('OK 200', () => pm.response.to.have.status(200));",
                  "const json = pm.response.json();",
                  "pm.test('has updateDate', () => pm.expect(json.updateDate).to.exist);",
                  "pm.test('lastEditedAt set when content changed', () => pm.expect(json.lastEditedAt).to.exist);"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated title\",\n  \"content\": \"Updated body\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/posts/{{post_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "posts",
                "{{post_id}}"
              ]
            }
          }
        },
        {
          "name": "Publish Post",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('OK 200', () => pm.response.to.have.status(200));",
                  "const json = pm.response.json();",
                  "pm.test('status=Published', () => pm.expect(json.status).to.eql('Published'));"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/posts/{{post_id}}/publish",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "posts",
                "{{post_id}}",
                "publish"
              ]
            }
          }
        },
        {
          "name": "List Published (Home)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('OK 200', () => pm.response.to.have.status(200));",
                  "pm.test('array', () => Array.isArray(pm.response.json()));"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/posts",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "posts"
              ]
            }
          }
        },
        {
          "name": "Get Post by id",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('OK 200', () => pm.response.to.have.status(200));",
                  "const json = pm.response.json();",
                  "pm.test('id matches', () => pm.expect(json.id).to.eql(pm.collectionVariables.get('post_id')));"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/posts/{{post_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "posts",
                "{{post_id}}"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Negative",
      "item": [
        {
          "name": "List without token \u2192 401",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('401 Unauthorized', () => pm.response.to.have.status(401));"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/posts",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "posts"
              ]
            }
          }
        }
      ]
    }
  ]
}